// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wass.Back.Empresa.Rabbit.Context;

namespace Wass.Back.Empresa.Migrations
{
    [DbContext(typeof(EmpresaContext))]
    [Migration("20210628021759_camposSedesnuevo")]
    partial class camposSedesnuevo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosAdquisicion", b =>
                {
                    b.Property<Guid>("idActivosAdquisicion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adquisisiones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaAdquision")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRetiro")
                        .HasColumnType("datetime2");

                    b.Property<int>("Garantia")
                        .HasColumnType("int");

                    b.Property<string>("Lote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumFactura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoGarantia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("idActivosEquipos")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("idActivosFlotas")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("idTipoAdquisicion")
                        .HasColumnType("bigint");

                    b.HasKey("idActivosAdquisicion");

                    b.HasIndex("idActivosEquipos")
                        .IsUnique()
                        .HasFilter("[idActivosEquipos] IS NOT NULL");

                    b.HasIndex("idActivosFlotas")
                        .IsUnique()
                        .HasFilter("[idActivosFlotas] IS NOT NULL");

                    b.ToTable("ActivosAdquisicion");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosCaracteristicas", b =>
                {
                    b.Property<Guid>("idActivoCaracteristica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Caracteristica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("idActivoEquipo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("idActivoFlota")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("idActivoCaracteristica");

                    b.HasIndex("idActivoEquipo");

                    b.HasIndex("idActivoFlota");

                    b.ToTable("ActivosCaracteristicas");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosCategorizacion", b =>
                {
                    b.Property<long>("idCategorizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("categorizacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<long>("idEmpresa")
                        .HasColumnType("bigint");

                    b.HasKey("idCategorizacion");

                    b.ToTable("ActivosCategorizacion");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosClasificacion", b =>
                {
                    b.Property<long>("idClasificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("clasificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<long>("idCategorizacion")
                        .HasColumnType("bigint");

                    b.Property<long?>("idSubClasificaicon")
                        .HasColumnType("bigint");

                    b.Property<long>("prioridad")
                        .HasColumnType("bigint");

                    b.HasKey("idClasificacion");

                    b.HasIndex("idCategorizacion");

                    b.HasIndex("idSubClasificaicon");

                    b.ToTable("ActivosClasificacion");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosClasificacionAcciones", b =>
                {
                    b.Property<long>("idAccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("accion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<long>("idClasificacion")
                        .HasColumnType("bigint");

                    b.HasKey("idAccion");

                    b.ToTable("ActivosClasificacionAcciones");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosClasificacionDiagnosticos", b =>
                {
                    b.Property<long>("idDiagnostico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("diagnostico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<long>("idClasificacion")
                        .HasColumnType("bigint");

                    b.Property<bool>("parada")
                        .HasColumnType("bit");

                    b.HasKey("idDiagnostico");

                    b.ToTable("ActivosClasificacionDiagnosticos");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosClasificacionDiagnosticosAcciones", b =>
                {
                    b.Property<long>("idDiagnosticosAcciones")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<long>("idAccion")
                        .HasColumnType("bigint");

                    b.Property<long>("idDiagnostico")
                        .HasColumnType("bigint");

                    b.HasKey("idDiagnosticosAcciones");

                    b.HasIndex("idAccion");

                    b.HasIndex("idDiagnostico");

                    b.ToTable("ActivosClasificacionDiagnosticosAcciones");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosClasificacionDiagnosticosSkills", b =>
                {
                    b.Property<long>("idDiagnosticosSkills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<long>("idDiagnostico")
                        .HasColumnType("bigint");

                    b.Property<long>("idSkill")
                        .HasColumnType("bigint");

                    b.HasKey("idDiagnosticosSkills");

                    b.HasIndex("idDiagnostico");

                    b.HasIndex("idSkill");

                    b.ToTable("ActivosClasificacionDiagnosticosSkills");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosClasificacionVariables", b =>
                {
                    b.Property<long>("idVarible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<long>("idClasificacion")
                        .HasColumnType("bigint");

                    b.Property<long>("idUnidadMedida")
                        .HasColumnType("bigint");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idVarible");

                    b.ToTable("ActivosClasificacionVariables");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosEquipos", b =>
                {
                    b.Property<Guid>("idActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoBarras")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Fabricante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FinalizaFuncionamiento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InicioFuncionamiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponsableEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Serial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Telefono")
                        .HasColumnType("bigint");

                    b.Property<int>("VidaUtil")
                        .HasColumnType("int");

                    b.Property<long>("idCategoria")
                        .HasColumnType("bigint");

                    b.Property<long>("idClasificacion1")
                        .HasColumnType("bigint");

                    b.Property<long>("idClasificacion2")
                        .HasColumnType("bigint");

                    b.Property<long>("idEstado")
                        .HasColumnType("bigint");

                    b.Property<long>("idMarca")
                        .HasColumnType("bigint");

                    b.Property<long>("idSedeResponsable")
                        .HasColumnType("bigint");

                    b.Property<long>("idSkill")
                        .HasColumnType("bigint");

                    b.Property<string>("otros")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urlImgEquipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idActivo");

                    b.HasIndex("idMarca");

                    b.HasIndex("idSkill");

                    b.ToTable("ActivosEquipos");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosFlotas", b =>
                {
                    b.Property<Guid>("idActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Altura")
                        .HasColumnType("int");

                    b.Property<int>("Ancho")
                        .HasColumnType("int");

                    b.Property<string>("CentroCosto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Chasis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cilindros")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoBarras")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ejes")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Fabricante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FinalizaFuncionamiento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InicioFuncionamiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Licencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ocupantes")
                        .HasColumnType("int");

                    b.Property<long>("Odometro")
                        .HasColumnType("bigint");

                    b.Property<int>("Peso")
                        .HasColumnType("int");

                    b.Property<string>("Responsable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponsableEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rpm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Serial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialMotor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Telefono")
                        .HasColumnType("bigint");

                    b.Property<string>("UnidadPoder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VidaUtil")
                        .HasColumnType("int");

                    b.Property<long>("idCategoria")
                        .HasColumnType("bigint");

                    b.Property<long>("idClasificacion1")
                        .HasColumnType("bigint");

                    b.Property<long?>("idClasificacion2")
                        .HasColumnType("bigint");

                    b.Property<long>("idEstado")
                        .HasColumnType("bigint");

                    b.Property<long>("idSedeResponsable")
                        .HasColumnType("bigint");

                    b.Property<long>("idTipoCombustiblePrimario")
                        .HasColumnType("bigint");

                    b.Property<long>("idTipoCombustibleSecundario")
                        .HasColumnType("bigint");

                    b.Property<long>("idTipoMotor")
                        .HasColumnType("bigint");

                    b.Property<string>("urlImgFlota")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idActivo");

                    b.ToTable("ActivosFlotas");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosParada", b =>
                {
                    b.Property<long>("idActivosParada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("fechaHoraParada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaHoraReactivacion")
                        .HasColumnType("datetime2");

                    b.Property<double>("horasParada")
                        .HasColumnType("float");

                    b.Property<Guid>("idActivo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("idCuadrilla")
                        .HasColumnType("bigint");

                    b.Property<long>("idEmpresa")
                        .HasColumnType("bigint");

                    b.Property<long>("idOrden")
                        .HasColumnType("bigint");

                    b.Property<long>("idSede")
                        .HasColumnType("bigint");

                    b.Property<long>("tipoOrden")
                        .HasColumnType("bigint");

                    b.HasKey("idActivosParada");

                    b.ToTable("ActivosParada");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosPartes", b =>
                {
                    b.Property<Guid>("idParte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<long>("idClasificacion")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("idSubParte")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("parte")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idParte");

                    b.HasIndex("idClasificacion");

                    b.HasIndex("idSubParte");

                    b.ToTable("ActivosPartes");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosUbicacion", b =>
                {
                    b.Property<Guid>("idUbicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("idActivoFlota")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("idActivosEquipos")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("idCentroTrabajo")
                        .HasColumnType("bigint");

                    b.Property<long>("idTipoUbicacion")
                        .HasColumnType("bigint");

                    b.Property<string>("latitud")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("longitud")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idUbicacion");

                    b.HasIndex("idActivoFlota")
                        .IsUnique()
                        .HasFilter("[idActivoFlota] IS NOT NULL");

                    b.HasIndex("idActivosEquipos")
                        .IsUnique()
                        .HasFilter("[idActivosEquipos] IS NOT NULL");

                    b.ToTable("ActivosUbicacion");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosVariables", b =>
                {
                    b.Property<long>("idActivoVariable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<string>("creador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("editor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaEdicion")
                        .HasColumnType("datetime2");

                    b.Property<long>("idActivoClasificacionVariable")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("idActivoEquipo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("idActivoFlota")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("idActivoVariable");

                    b.ToTable("ActivosVariables");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosVariablesHistorico", b =>
                {
                    b.Property<long>("idActivoVariableHistorico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("idActivoVariable")
                        .HasColumnType("bigint");

                    b.HasKey("idActivoVariableHistorico");

                    b.HasIndex("idActivoVariable");

                    b.ToTable("ActivosVariablesHistorico");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.AjustesAlmacenes", b =>
                {
                    b.Property<long>("idAjustesAlmacenes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("cantidadAnterior")
                        .HasColumnType("bigint");

                    b.Property<long>("cantidadNueva")
                        .HasColumnType("bigint");

                    b.Property<long>("existenciaActual")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("fechaHora")
                        .HasColumnType("datetime2");

                    b.Property<long>("idAlmacen")
                        .HasColumnType("bigint");

                    b.Property<long>("idRepuesto")
                        .HasColumnType("bigint");

                    b.Property<long>("idUsuario")
                        .HasColumnType("bigint");

                    b.Property<string>("motivo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idAjustesAlmacenes");

                    b.ToTable("AjustesAlmacenes");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Almacen", b =>
                {
                    b.Property<long>("idAlmacen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaDesactivacion")
                        .HasColumnType("datetime2");

                    b.Property<long>("idCuadrilla")
                        .HasColumnType("bigint");

                    b.Property<long>("idSede")
                        .HasColumnType("bigint");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("tipo")
                        .HasColumnType("bigint");

                    b.HasKey("idAlmacen");

                    b.ToTable("Almacen");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ArchivosAdjuntosActivosEquipos", b =>
                {
                    b.Property<long>("idArchivoAdjuntoActivosEquipos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("eliminada")
                        .HasColumnType("bit");

                    b.Property<Guid>("idActivo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urlArchivoAdjuntoActivosEquipos")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idArchivoAdjuntoActivosEquipos");

                    b.HasIndex("idActivo");

                    b.ToTable("ArchivosAdjuntosActivosEquipos");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ArchivosAdjuntosActivosFlotas", b =>
                {
                    b.Property<long>("idArchivoAdjuntoActivosFlotas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("eliminada")
                        .HasColumnType("bit");

                    b.Property<Guid>("idActivo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urlArchivoAdjuntoActivosFlotas")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idArchivoAdjuntoActivosFlotas");

                    b.HasIndex("idActivo");

                    b.ToTable("ArchivosAdjuntosActivosFlotas");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Calificacion", b =>
                {
                    b.Property<long>("idCalificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("calificacion")
                        .HasColumnType("real");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("idEmpresa")
                        .HasColumnType("bigint");

                    b.Property<long>("idOrdenTrabajo")
                        .HasColumnType("bigint");

                    b.Property<long>("idProveedor")
                        .HasColumnType("bigint");

                    b.Property<long>("idSede")
                        .HasColumnType("bigint");

                    b.Property<string>("motivo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCalificacion");

                    b.ToTable("Calificacion");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Cargos", b =>
                {
                    b.Property<int>("idCargo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cargo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCargo");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.CentroCosto", b =>
                {
                    b.Property<long>("idCentroCosto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<string>("idCentroCostoPadre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("idEmpresa")
                        .HasColumnType("bigint");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCentroCosto");

                    b.ToTable("CentroCosto");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.CentrosTrabajo", b =>
                {
                    b.Property<long>("idCentroTrabajo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<long>("idSede")
                        .HasColumnType("bigint");

                    b.Property<long?>("idSubCentroTrabajo")
                        .HasColumnType("bigint");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCentroTrabajo");

                    b.HasIndex("idSede");

                    b.HasIndex("idSubCentroTrabajo");

                    b.ToTable("CentrosTrabajo");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Certificacion", b =>
                {
                    b.Property<long>("idCertificado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<bool>("expira")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaEmision")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaExpiracion")
                        .HasColumnType("datetime2");

                    b.Property<string>("idCredencial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("idEmpleado")
                        .HasColumnType("bigint");

                    b.Property<long>("idEmpresa")
                        .HasColumnType("bigint");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("organizacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urlCredencial")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCertificado");

                    b.HasIndex("idEmpleado");

                    b.HasIndex("idEmpresa");

                    b.ToTable("Certificaciones");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Comentario", b =>
                {
                    b.Property<long>("idComentario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaHoraComentario")
                        .HasColumnType("datetime2");

                    b.Property<long?>("idComentarioPadre")
                        .HasColumnType("bigint");

                    b.Property<long>("idEmpleado")
                        .HasColumnType("bigint");

                    b.Property<long>("idTopicoAComentar")
                        .HasColumnType("bigint");

                    b.Property<string>("idUsuariosLike")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("like")
                        .HasColumnType("bigint");

                    b.Property<bool>("replica")
                        .HasColumnType("bit");

                    b.Property<string>("urlImagen")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idComentario");

                    b.HasIndex("idEmpleado");

                    b.HasIndex("idTopicoAComentar");

                    b.ToTable("Comentario");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Conversacion", b =>
                {
                    b.Property<long>("idConversacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("noLeido")
                        .HasColumnType("int");

                    b.Property<long>("usuario1")
                        .HasColumnType("bigint");

                    b.Property<long>("usuario2")
                        .HasColumnType("bigint");

                    b.HasKey("idConversacion");

                    b.ToTable("Conversacion");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.CuadrillaEmpleados", b =>
                {
                    b.Property<Guid>("idEmpleadoCuadrilla")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("creador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("editor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaEdicion")
                        .HasColumnType("datetime2");

                    b.Property<long>("idCuadrilla")
                        .HasColumnType("bigint");

                    b.Property<long>("idEmpleado")
                        .HasColumnType("bigint");

                    b.Property<bool>("lider")
                        .HasColumnType("bit");

                    b.HasKey("idEmpleadoCuadrilla");

                    b.HasIndex("idCuadrilla");

                    b.HasIndex("idEmpleado");

                    b.ToTable("CuadrillaEmpleados");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.CuadrillaSkill", b =>
                {
                    b.Property<long>("idCuadrillaSkill")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<long>("idCuadrilla")
                        .HasColumnType("bigint");

                    b.Property<long>("idSkill")
                        .HasColumnType("bigint");

                    b.HasKey("idCuadrillaSkill");

                    b.HasIndex("idCuadrilla");

                    b.HasIndex("idSkill");

                    b.ToTable("CuadrillaSkill");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.CuadrillaSkillsEmpresa", b =>
                {
                    b.Property<long>("idCuadrillaSkillsEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("fechaHora")
                        .HasColumnType("datetime2");

                    b.Property<long>("idCuadrilla")
                        .HasColumnType("bigint");

                    b.Property<long>("idSkill")
                        .HasColumnType("bigint");

                    b.Property<long>("idUsuario")
                        .HasColumnType("bigint");

                    b.Property<string>("skillsSeleccionados")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCuadrillaSkillsEmpresa");

                    b.HasIndex("idCuadrilla");

                    b.HasIndex("idSkill");

                    b.ToTable("CuadrillaSkillsEmpresa");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Cuadrillas", b =>
                {
                    b.Property<long>("idCuadrilla")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.Property<long>("idSede")
                        .HasColumnType("bigint");

                    b.Property<string>("nombreA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("numMiembros")
                        .HasColumnType("int");

                    b.Property<string>("ubicacionActual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("zonaAtencion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCuadrilla");

                    b.HasIndex("idSede");

                    b.ToTable("Cuadrillas");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.CuadrillasTurnos", b =>
                {
                    b.Property<long>("idCuadrillasTurnos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("idCuadrilla")
                        .HasColumnType("bigint");

                    b.Property<long>("idTurno")
                        .HasColumnType("bigint");

                    b.HasKey("idCuadrillasTurnos");

                    b.HasIndex("idCuadrilla");

                    b.ToTable("CuadrillasTurnos");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Cuestionario", b =>
                {
                    b.Property<long>("idCuestionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<long>("idEmpresa")
                        .HasColumnType("bigint");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCuestionario");

                    b.ToTable("Cuestionario");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.CuestionarioPreguntas", b =>
                {
                    b.Property<long>("idCuestionarioPregunta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<long>("idCuestionario")
                        .HasColumnType("bigint");

                    b.Property<long>("idPregunta")
                        .HasColumnType("bigint");

                    b.HasKey("idCuestionarioPregunta");

                    b.HasIndex("idCuestionario");

                    b.HasIndex("idPregunta");

                    b.ToTable("CuestionarioPreguntas");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.DañosRepuestos", b =>
                {
                    b.Property<long>("idDañosRepuestos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("cantidad")
                        .HasColumnType("bigint");

                    b.Property<long>("existenciaActual")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("fechaHora")
                        .HasColumnType("datetime2");

                    b.Property<long>("idAlmacen")
                        .HasColumnType("bigint");

                    b.Property<long>("idRepuesto")
                        .HasColumnType("bigint");

                    b.Property<long>("idUsuario")
                        .HasColumnType("bigint");

                    b.Property<string>("motivo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idDañosRepuestos");

                    b.ToTable("DañosRepuestos");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Departamentos", b =>
                {
                    b.Property<int>("idDepto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("depto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("idPais")
                        .HasColumnType("int");

                    b.HasKey("idDepto");

                    b.HasIndex("idPais");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.DiagnosticoSkillsEmpresa", b =>
                {
                    b.Property<long>("idDiagnosticoSkillsEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("fechaHora")
                        .HasColumnType("datetime2");

                    b.Property<long>("idDiagnostico")
                        .HasColumnType("bigint");

                    b.Property<long>("idSkill")
                        .HasColumnType("bigint");

                    b.Property<long>("idUsuario")
                        .HasColumnType("bigint");

                    b.Property<string>("skillsSeleccionados")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idDiagnosticoSkillsEmpresa");

                    b.HasIndex("idDiagnostico");

                    b.HasIndex("idSkill");

                    b.ToTable("DiagnosticoSkillsEmpresa");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Empleados", b =>
                {
                    b.Property<long>("idEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConnectionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estadoChat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idCargo")
                        .HasColumnType("int");

                    b.Property<int>("idEstadoEmpleado")
                        .HasColumnType("int");

                    b.Property<long>("idSede")
                        .HasColumnType("bigint");

                    b.Property<long>("idTipoDocumento")
                        .HasColumnType("bigint");

                    b.Property<string>("nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urlFotoEmpleado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idEmpleado");

                    b.HasIndex("idSede");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.EmpresaChecks", b =>
                {
                    b.Property<long>("idEmpresaCheck")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("detalle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<long>("idEmpresa")
                        .HasColumnType("bigint");

                    b.Property<long>("idLista")
                        .HasColumnType("bigint");

                    b.Property<long>("idValor")
                        .HasColumnType("bigint");

                    b.HasKey("idEmpresaCheck");

                    b.HasIndex("idEmpresa");

                    b.ToTable("EmpresaChecks");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.EmpresaSkills", b =>
                {
                    b.Property<long>("idSkill")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("idEmpresa")
                        .HasColumnType("bigint");

                    b.Property<string>("skills")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idSkill");

                    b.ToTable("EmpresaSkills");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.EmpresaSoportes", b =>
                {
                    b.Property<Guid>("idSoporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<Guid?>("idActivosEquipos")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("idActivosFlotas")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("idEmpresa")
                        .HasColumnType("bigint");

                    b.Property<int>("idTipoDocumento")
                        .HasColumnType("int");

                    b.Property<string>("rutaArchivo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idSoporte");

                    b.HasIndex("idEmpresa");

                    b.ToTable("EmpresaSoportes");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Empresas", b =>
                {
                    b.Property<long>("idEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("aprobador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("creador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("digVerficacion")
                        .HasColumnType("int");

                    b.Property<string>("editor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaEdicion")
                        .HasColumnType("datetime2");

                    b.Property<int>("idEstado")
                        .HasColumnType("int");

                    b.Property<string>("mensaje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("razonSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipoAfiliacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urlLogoEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idEmpresa");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Herramientas", b =>
                {
                    b.Property<long>("idHerramienta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("codigoActivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<long>("estado")
                        .HasColumnType("bigint");

                    b.Property<long>("idSede")
                        .HasColumnType("bigint");

                    b.Property<string>("marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("tipo")
                        .HasColumnType("bigint");

                    b.Property<string>("urlImagen")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idHerramienta");

                    b.ToTable("Herramientas");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.KardexRepuesto", b =>
                {
                    b.Property<long>("idKardexRepuesto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("consulta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idKardexRepuesto");

                    b.ToTable("ConsultaFechasInventarios");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Listas", b =>
                {
                    b.Property<int>("idLista")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<string>("descripción")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idLista");

                    b.ToTable("Listas");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ListasValores", b =>
                {
                    b.Property<long>("idValor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<int>("idLista")
                        .HasColumnType("int");

                    b.Property<string>("valor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idValor");

                    b.HasIndex("idLista");

                    b.ToTable("ListasValores");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Marca", b =>
                {
                    b.Property<long>("idMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<long?>("idSubMarca")
                        .HasColumnType("bigint");

                    b.Property<string>("marca")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idMarca");

                    b.HasIndex("idSubMarca");

                    b.ToTable("Marca");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.MarcaActivo", b =>
                {
                    b.Property<long>("idMarcaActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("marcaActivo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idMarcaActivo");

                    b.ToTable("MarcaActivo");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.MarcaEmpresa", b =>
                {
                    b.Property<long>("idMarcaEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<long>("idEmpresa")
                        .HasColumnType("bigint");

                    b.Property<long>("idMarca")
                        .HasColumnType("bigint");

                    b.HasKey("idMarcaEmpresa");

                    b.HasIndex("idEmpresa");

                    b.HasIndex("idMarca");

                    b.ToTable("MarcaEmpresa");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.MensajesConversacion", b =>
                {
                    b.Property<long>("idMensajesConversacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaHoraMensaje")
                        .HasColumnType("datetime2");

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<long>("idConversacion")
                        .HasColumnType("bigint");

                    b.Property<long>("idSender")
                        .HasColumnType("bigint");

                    b.Property<string>("mensaje")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idMensajesConversacion");

                    b.HasIndex("idConversacion");

                    b.ToTable("MensajesConversacion");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Municipios", b =>
                {
                    b.Property<int>("idMunicipio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("idDepto")
                        .HasColumnType("int");

                    b.Property<string>("municipio")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idMunicipio");

                    b.HasIndex("idDepto");

                    b.ToTable("Municipios");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.OrdenEntregaAlmacen", b =>
                {
                    b.Property<long>("idOrdenEntregaAlmacen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("fechaHora")
                        .HasColumnType("datetime2");

                    b.Property<long>("idAlmacen")
                        .HasColumnType("bigint");

                    b.Property<long>("idCuadrilla")
                        .HasColumnType("bigint");

                    b.Property<long>("idOrdenTrabajo")
                        .HasColumnType("bigint");

                    b.Property<long>("idSede")
                        .HasColumnType("bigint");

                    b.Property<string>("repuestos")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idOrdenEntregaAlmacen");

                    b.HasIndex("idAlmacen");

                    b.ToTable("OrdenEntregaAlmacen");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Paises", b =>
                {
                    b.Property<int>("idPais")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<string>("pais")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idPais");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Preguntas", b =>
                {
                    b.Property<long>("idPregunta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<long>("idEmpresa")
                        .HasColumnType("bigint");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("opciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("tipoRespuesta")
                        .HasColumnType("bigint");

                    b.HasKey("idPregunta");

                    b.ToTable("Preguntas");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.RecepcionRepuestos", b =>
                {
                    b.Property<long>("idRecepcionRepuestos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("fechaHora")
                        .HasColumnType("datetime2");

                    b.Property<long>("idAlmacen")
                        .HasColumnType("bigint");

                    b.Property<long>("idUsuario")
                        .HasColumnType("bigint");

                    b.Property<string>("repuestos")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idRecepcionRepuestos");

                    b.HasIndex("idAlmacen");

                    b.ToTable("RecepcionRepuestos");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Recomendaciones", b =>
                {
                    b.Property<int>("idRecomendacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<long>("idEmpresaRecomendada")
                        .HasColumnType("bigint");

                    b.Property<long>("idEmpresaRecomienda")
                        .HasColumnType("bigint");

                    b.Property<string>("recomendacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idRecomendacion");

                    b.ToTable("Recomendaciones");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Repuestos", b =>
                {
                    b.Property<long>("idRepuestos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("clasificacionABC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codigoBarras")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("costoUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("criticidad")
                        .HasColumnType("bigint");

                    b.Property<string>("especificaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("idCategoria")
                        .HasColumnType("bigint");

                    b.Property<long>("idClasificacion")
                        .HasColumnType("bigint");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("numeroMinimoPedido")
                        .HasColumnType("bigint");

                    b.Property<long>("tiempoCompra")
                        .HasColumnType("bigint");

                    b.Property<long>("tiempoEntregaPromedio")
                        .HasColumnType("bigint");

                    b.Property<string>("unidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urlImagen")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idRepuestos");

                    b.ToTable("Repuestos");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.RepuestosAlmacen", b =>
                {
                    b.Property<long>("idRepuestosAlmacen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("cantidadActual")
                        .HasColumnType("bigint");

                    b.Property<long>("cantidadMaxima")
                        .HasColumnType("bigint");

                    b.Property<long>("cantidadMinima")
                        .HasColumnType("bigint");

                    b.Property<long>("cantidadOptima")
                        .HasColumnType("bigint");

                    b.Property<long>("idAlmacen")
                        .HasColumnType("bigint");

                    b.Property<long>("idRepuestos")
                        .HasColumnType("bigint");

                    b.HasKey("idRepuestosAlmacen");

                    b.HasIndex("idAlmacen");

                    b.HasIndex("idRepuestos");

                    b.ToTable("RepuestosAlmacen");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.RepuestosDiagnostico", b =>
                {
                    b.Property<long>("idRepuestosDiagnostico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("cantidad")
                        .HasColumnType("bigint");

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<long>("idDiagnostico")
                        .HasColumnType("bigint");

                    b.Property<long>("idRepuestos")
                        .HasColumnType("bigint");

                    b.HasKey("idRepuestosDiagnostico");

                    b.HasIndex("idDiagnostico");

                    b.HasIndex("idRepuestos");

                    b.ToTable("RepuestosDiagnostico");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.RepuestosGrupoPartes", b =>
                {
                    b.Property<int>("idRepuestosGrupoPartes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("cantidad")
                        .HasColumnType("bigint");

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<long>("idGrupoPartes")
                        .HasColumnType("bigint");

                    b.Property<long>("idRepuestos")
                        .HasColumnType("bigint");

                    b.HasKey("idRepuestosGrupoPartes");

                    b.HasIndex("idRepuestos");

                    b.ToTable("RepuestosGrupoPartes");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.RespuestaActivosVariables", b =>
                {
                    b.Property<long>("idRespuestaActivosVariables")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("idActivoEquipo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("idActivoFlota")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("idActivoVariable")
                        .HasColumnType("bigint");

                    b.Property<long>("idCategorizacion")
                        .HasColumnType("bigint");

                    b.Property<long>("idClasificacion")
                        .HasColumnType("bigint");

                    b.Property<string>("respuesta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idRespuestaActivosVariables");

                    b.ToTable("RespuestaActivosVariables");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Sedes", b =>
                {
                    b.Property<long>("idSede")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CentroCostoidCentroCosto")
                        .HasColumnType("bigint");

                    b.Property<long?>("EmpresasidEmpresa")
                        .HasColumnType("bigint");

                    b.Property<string>("creador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("editor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaEdicion")
                        .HasColumnType("datetime2");

                    b.Property<long>("idCentroCosto")
                        .HasColumnType("bigint");

                    b.Property<long>("idEmpresa")
                        .HasColumnType("bigint");

                    b.Property<int>("idMunicipio")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("personaContacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idSede");

                    b.HasIndex("CentroCostoidCentroCosto");

                    b.HasIndex("EmpresasidEmpresa");

                    b.ToTable("Sedes");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Skill", b =>
                {
                    b.Property<long>("idSkill")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("idEmpresa")
                        .HasColumnType("bigint");

                    b.Property<string>("skill")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idSkill");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.SolicitudPedido", b =>
                {
                    b.Property<long>("idSolicitudPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("detalle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("estado")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("fechaCancelacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaEnvio")
                        .HasColumnType("datetime2");

                    b.Property<long>("idLicitacion")
                        .HasColumnType("bigint");

                    b.Property<long>("idSede")
                        .HasColumnType("bigint");

                    b.Property<long>("idUsuarioCreador")
                        .HasColumnType("bigint");

                    b.Property<long>("nivelUrgencia")
                        .HasColumnType("bigint");

                    b.HasKey("idSolicitudPedido");

                    b.ToTable("SolicitudPedido");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.TipoActivo", b =>
                {
                    b.Property<long>("idTipoActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("tipoActivo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idTipoActivo");

                    b.ToTable("TipoActivo");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.TopicoAComentar", b =>
                {
                    b.Property<long>("idTopicoAComentar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaHora")
                        .HasColumnType("datetime2");

                    b.Property<long>("idEmpleado")
                        .HasColumnType("bigint");

                    b.Property<long>("idEmpresa")
                        .HasColumnType("bigint");

                    b.Property<long>("idSede")
                        .HasColumnType("bigint");

                    b.Property<string>("idTopico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("tipoTopico")
                        .HasColumnType("bigint");

                    b.Property<string>("urlImagen")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idTopicoAComentar");

                    b.ToTable("TopicoAComentar");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.TransferenciasInternasAlmacenes", b =>
                {
                    b.Property<long>("idTransferenciasInternasAlmacenes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("estado")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("fechaHora")
                        .HasColumnType("datetime2");

                    b.Property<long>("idAlmacenEmisor")
                        .HasColumnType("bigint");

                    b.Property<long>("idAlmacenReceptor")
                        .HasColumnType("bigint");

                    b.Property<long>("idEmpresa")
                        .HasColumnType("bigint");

                    b.Property<long>("motivoTransferencia")
                        .HasColumnType("bigint");

                    b.Property<string>("ordenTrabajo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("repuestos")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idTransferenciasInternasAlmacenes");

                    b.ToTable("TransferenciasInternasAlmacenes");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Turnos", b =>
                {
                    b.Property<long>("idTurno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("creador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("diaFinal")
                        .HasColumnType("int");

                    b.Property<int>("diaInicial")
                        .HasColumnType("int");

                    b.Property<string>("editor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaEdicion")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("horaFinal")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("horaInicial")
                        .HasColumnType("time");

                    b.Property<long>("idEmpresa")
                        .HasColumnType("bigint");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idTurno");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosAdquisicion", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.ActivosEquipos", "equipo")
                        .WithOne("adquisicion")
                        .HasForeignKey("Wass.Back.Empresa.Models.Entity.ActivosAdquisicion", "idActivosEquipos");

                    b.HasOne("Wass.Back.Empresa.Models.Entity.ActivosFlotas", "flota")
                        .WithOne("adquisicion")
                        .HasForeignKey("Wass.Back.Empresa.Models.Entity.ActivosAdquisicion", "idActivosFlotas");

                    b.Navigation("equipo");

                    b.Navigation("flota");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosCaracteristicas", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.ActivosEquipos", "equipo")
                        .WithMany("caracteristicas")
                        .HasForeignKey("idActivoEquipo");

                    b.HasOne("Wass.Back.Empresa.Models.Entity.ActivosFlotas", "flota")
                        .WithMany("caracteristicas")
                        .HasForeignKey("idActivoFlota");

                    b.Navigation("equipo");

                    b.Navigation("flota");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosClasificacion", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.ActivosCategorizacion", "categoria")
                        .WithMany("ListaClasificaciones")
                        .HasForeignKey("idCategorizacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wass.Back.Empresa.Models.Entity.ActivosClasificacion", "subClasificacion")
                        .WithMany()
                        .HasForeignKey("idSubClasificaicon");

                    b.Navigation("categoria");

                    b.Navigation("subClasificacion");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosClasificacionDiagnosticosAcciones", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.ActivosClasificacionAcciones", "ActivosClasificacionAcciones")
                        .WithMany("ActivosClasificacionDiagnosticosAcciones")
                        .HasForeignKey("idAccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wass.Back.Empresa.Models.Entity.ActivosClasificacionDiagnosticos", "ActivosClasificacionDiagnosticos")
                        .WithMany("ActivosClasificacionDiagnosticosAcciones")
                        .HasForeignKey("idDiagnostico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActivosClasificacionAcciones");

                    b.Navigation("ActivosClasificacionDiagnosticos");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosClasificacionDiagnosticosSkills", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.ActivosClasificacionDiagnosticos", "ActivosClasificacionDiagnosticos")
                        .WithMany()
                        .HasForeignKey("idDiagnostico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wass.Back.Empresa.Models.Entity.EmpresaSkills", "EmpresaSkills")
                        .WithMany()
                        .HasForeignKey("idSkill")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActivosClasificacionDiagnosticos");

                    b.Navigation("EmpresaSkills");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosEquipos", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.Marca", "marca")
                        .WithMany()
                        .HasForeignKey("idMarca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wass.Back.Empresa.Models.Entity.Skill", "skill")
                        .WithMany()
                        .HasForeignKey("idSkill")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("marca");

                    b.Navigation("skill");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosPartes", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.ActivosClasificacion", "clasificacion")
                        .WithMany("ListaPartes")
                        .HasForeignKey("idClasificacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wass.Back.Empresa.Models.Entity.ActivosPartes", "subParte")
                        .WithMany()
                        .HasForeignKey("idSubParte");

                    b.Navigation("clasificacion");

                    b.Navigation("subParte");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosUbicacion", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.ActivosFlotas", "flota")
                        .WithOne("ubicacion")
                        .HasForeignKey("Wass.Back.Empresa.Models.Entity.ActivosUbicacion", "idActivoFlota");

                    b.HasOne("Wass.Back.Empresa.Models.Entity.ActivosEquipos", "equipo")
                        .WithOne("ubicacion")
                        .HasForeignKey("Wass.Back.Empresa.Models.Entity.ActivosUbicacion", "idActivosEquipos");

                    b.Navigation("equipo");

                    b.Navigation("flota");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosVariablesHistorico", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.ActivosVariables", "ActivoVariable")
                        .WithMany()
                        .HasForeignKey("idActivoVariable")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActivoVariable");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ArchivosAdjuntosActivosEquipos", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.ActivosEquipos", "ActivosEquipos")
                        .WithMany("ArchivosAdjuntos")
                        .HasForeignKey("idActivo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActivosEquipos");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ArchivosAdjuntosActivosFlotas", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.ActivosFlotas", "ActivosFlotas")
                        .WithMany("ArchivosAdjuntos")
                        .HasForeignKey("idActivo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActivosFlotas");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.CentrosTrabajo", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.Sedes", "sede")
                        .WithMany("ListaCentrosTrabajo")
                        .HasForeignKey("idSede")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wass.Back.Empresa.Models.Entity.CentrosTrabajo", "centrosTrabajo")
                        .WithMany()
                        .HasForeignKey("idSubCentroTrabajo");

                    b.Navigation("centrosTrabajo");

                    b.Navigation("sede");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Certificacion", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.Empleados", "empleados")
                        .WithMany("ListaCertificados")
                        .HasForeignKey("idEmpleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wass.Back.Empresa.Models.Entity.Empresas", "empresas")
                        .WithMany("ListaCertificados")
                        .HasForeignKey("idEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("empleados");

                    b.Navigation("empresas");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Comentario", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.Empleados", "Empleados")
                        .WithMany()
                        .HasForeignKey("idEmpleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wass.Back.Empresa.Models.Entity.TopicoAComentar", "TopicoAComentar")
                        .WithMany("comentario")
                        .HasForeignKey("idTopicoAComentar")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleados");

                    b.Navigation("TopicoAComentar");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.CuadrillaEmpleados", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.Cuadrillas", "Cuadrillas")
                        .WithMany("cuadrillaEmpleados")
                        .HasForeignKey("idCuadrilla")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wass.Back.Empresa.Models.Entity.Empleados", "empleado")
                        .WithMany("cuadrillaEmpleados")
                        .HasForeignKey("idEmpleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cuadrillas");

                    b.Navigation("empleado");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.CuadrillaSkill", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.Cuadrillas", "cuadrilla")
                        .WithMany()
                        .HasForeignKey("idCuadrilla")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wass.Back.Empresa.Models.Entity.Skill", "skill")
                        .WithMany()
                        .HasForeignKey("idSkill")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cuadrilla");

                    b.Navigation("skill");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.CuadrillaSkillsEmpresa", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.Cuadrillas", "cuadrilla")
                        .WithMany("cuadrillaSkillsEmpresa")
                        .HasForeignKey("idCuadrilla")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wass.Back.Empresa.Models.Entity.EmpresaSkills", "empresaSkills")
                        .WithMany("cuadrillaSkillsEmpresa")
                        .HasForeignKey("idSkill")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cuadrilla");

                    b.Navigation("empresaSkills");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Cuadrillas", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.Sedes", "sedes")
                        .WithMany("ListaCuadrillas")
                        .HasForeignKey("idSede")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("sedes");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.CuadrillasTurnos", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.Cuadrillas", "cuadrillas")
                        .WithMany("cuadrillaTurnos")
                        .HasForeignKey("idCuadrilla")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cuadrillas");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.CuestionarioPreguntas", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.Cuestionario", "Cuestionario")
                        .WithMany("cuestinarioPreguntas")
                        .HasForeignKey("idCuestionario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wass.Back.Empresa.Models.Entity.Preguntas", "Preguntas")
                        .WithMany("cuestinarioPreguntas")
                        .HasForeignKey("idPregunta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cuestionario");

                    b.Navigation("Preguntas");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Departamentos", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.Paises", "pais")
                        .WithMany()
                        .HasForeignKey("idPais")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pais");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.DiagnosticoSkillsEmpresa", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.ActivosClasificacionDiagnosticos", "ActivosClasificacionDiagnosticos")
                        .WithMany("DiagnosticoSkillsEmpresa")
                        .HasForeignKey("idDiagnostico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wass.Back.Empresa.Models.Entity.EmpresaSkills", "empresaSkills")
                        .WithMany("diagnosticoSkillsEmpresa")
                        .HasForeignKey("idSkill")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActivosClasificacionDiagnosticos");

                    b.Navigation("empresaSkills");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Empleados", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.Sedes", "sede")
                        .WithMany()
                        .HasForeignKey("idSede")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("sede");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.EmpresaChecks", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.Empresas", "empresas")
                        .WithMany("ListaEmpresaChecks")
                        .HasForeignKey("idEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("empresas");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.EmpresaSoportes", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.Empresas", "empresas")
                        .WithMany("ListaEmpresaSoportes")
                        .HasForeignKey("idEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("empresas");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ListasValores", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.Listas", "Lista")
                        .WithMany("listasValores")
                        .HasForeignKey("idLista")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lista");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Marca", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.ActivosClasificacion", "subMarca")
                        .WithMany()
                        .HasForeignKey("idSubMarca");

                    b.Navigation("subMarca");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.MarcaEmpresa", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.Empresas", "Empresa")
                        .WithMany()
                        .HasForeignKey("idEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wass.Back.Empresa.Models.Entity.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("idMarca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.MensajesConversacion", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.Conversacion", "Conversacion")
                        .WithMany("Mensajes")
                        .HasForeignKey("idConversacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conversacion");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Municipios", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.Departamentos", "departamento")
                        .WithMany()
                        .HasForeignKey("idDepto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("departamento");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.OrdenEntregaAlmacen", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.Almacen", "Almacen")
                        .WithMany()
                        .HasForeignKey("idAlmacen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Almacen");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.RecepcionRepuestos", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.Almacen", "Almacen")
                        .WithMany()
                        .HasForeignKey("idAlmacen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Almacen");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.RepuestosAlmacen", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.Almacen", "Almacen")
                        .WithMany("RepuestosAlmacen")
                        .HasForeignKey("idAlmacen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wass.Back.Empresa.Models.Entity.Repuestos", "Repuestos")
                        .WithMany("RepuestosAlmacen")
                        .HasForeignKey("idRepuestos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Almacen");

                    b.Navigation("Repuestos");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.RepuestosDiagnostico", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.ActivosClasificacionDiagnosticos", "ActivosClasificacionDiagnosticos")
                        .WithMany("RepuestosDiagnostico")
                        .HasForeignKey("idDiagnostico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wass.Back.Empresa.Models.Entity.Repuestos", "Repuestos")
                        .WithMany("RepuestosDiagnostico")
                        .HasForeignKey("idRepuestos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActivosClasificacionDiagnosticos");

                    b.Navigation("Repuestos");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.RepuestosGrupoPartes", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.Repuestos", "Repuestos")
                        .WithMany()
                        .HasForeignKey("idRepuestos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Repuestos");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Sedes", b =>
                {
                    b.HasOne("Wass.Back.Empresa.Models.Entity.CentroCosto", null)
                        .WithMany("Sedes")
                        .HasForeignKey("CentroCostoidCentroCosto");

                    b.HasOne("Wass.Back.Empresa.Models.Entity.Empresas", null)
                        .WithMany("ListaSedes")
                        .HasForeignKey("EmpresasidEmpresa");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosCategorizacion", b =>
                {
                    b.Navigation("ListaClasificaciones");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosClasificacion", b =>
                {
                    b.Navigation("ListaPartes");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosClasificacionAcciones", b =>
                {
                    b.Navigation("ActivosClasificacionDiagnosticosAcciones");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosClasificacionDiagnosticos", b =>
                {
                    b.Navigation("ActivosClasificacionDiagnosticosAcciones");

                    b.Navigation("DiagnosticoSkillsEmpresa");

                    b.Navigation("RepuestosDiagnostico");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosEquipos", b =>
                {
                    b.Navigation("adquisicion");

                    b.Navigation("ArchivosAdjuntos");

                    b.Navigation("caracteristicas");

                    b.Navigation("ubicacion");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.ActivosFlotas", b =>
                {
                    b.Navigation("adquisicion");

                    b.Navigation("ArchivosAdjuntos");

                    b.Navigation("caracteristicas");

                    b.Navigation("ubicacion");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Almacen", b =>
                {
                    b.Navigation("RepuestosAlmacen");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.CentroCosto", b =>
                {
                    b.Navigation("Sedes");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Conversacion", b =>
                {
                    b.Navigation("Mensajes");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Cuadrillas", b =>
                {
                    b.Navigation("cuadrillaEmpleados");

                    b.Navigation("cuadrillaSkillsEmpresa");

                    b.Navigation("cuadrillaTurnos");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Cuestionario", b =>
                {
                    b.Navigation("cuestinarioPreguntas");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Empleados", b =>
                {
                    b.Navigation("cuadrillaEmpleados");

                    b.Navigation("ListaCertificados");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.EmpresaSkills", b =>
                {
                    b.Navigation("cuadrillaSkillsEmpresa");

                    b.Navigation("diagnosticoSkillsEmpresa");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Empresas", b =>
                {
                    b.Navigation("ListaCertificados");

                    b.Navigation("ListaEmpresaChecks");

                    b.Navigation("ListaEmpresaSoportes");

                    b.Navigation("ListaSedes");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Listas", b =>
                {
                    b.Navigation("listasValores");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Preguntas", b =>
                {
                    b.Navigation("cuestinarioPreguntas");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Repuestos", b =>
                {
                    b.Navigation("RepuestosAlmacen");

                    b.Navigation("RepuestosDiagnostico");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.Sedes", b =>
                {
                    b.Navigation("ListaCentrosTrabajo");

                    b.Navigation("ListaCuadrillas");
                });

            modelBuilder.Entity("Wass.Back.Empresa.Models.Entity.TopicoAComentar", b =>
                {
                    b.Navigation("comentario");
                });
#pragma warning restore 612, 618
        }
    }
}
