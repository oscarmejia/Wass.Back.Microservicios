// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wass.Back.Programador.Rabbit.Context;

namespace Wass.Back.Programador.Migrations
{
    [DbContext(typeof(ProgramadorContext))]
    [Migration("20210616112650_programadorMigracion1")]
    partial class programadorMigracion1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.Agenda", b =>
                {
                    b.Property<long>("idAgenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("horaFin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("horaInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("idOrdenTrabajo")
                        .HasColumnType("bigint");

                    b.Property<long>("idRecurso")
                        .HasColumnType("bigint");

                    b.Property<int>("tipoRecurso")
                        .HasColumnType("int");

                    b.Property<string>("titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idAgenda");

                    b.ToTable("Agenda");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.ArchivosAdjuntosCotizacion", b =>
                {
                    b.Property<long>("idArchivoAdjuntoCotizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("eliminada")
                        .HasColumnType("bit");

                    b.Property<long>("idCotizacion")
                        .HasColumnType("bigint");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urlArchivoAdjuntoCotizacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idArchivoAdjuntoCotizacion");

                    b.HasIndex("idCotizacion");

                    b.ToTable("ArchivosAdjuntosCotizacion");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.ArchivosAdjuntosIncidencias", b =>
                {
                    b.Property<long>("idArchivosAdjuntosIncidencias")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("eliminada")
                        .HasColumnType("bit");

                    b.Property<long>("idIncidencias")
                        .HasColumnType("bigint");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urlArchivosAdjuntosIncidencias")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idArchivosAdjuntosIncidencias");

                    b.HasIndex("idIncidencias");

                    b.ToTable("ArchivosAdjuntosIncidencias");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.ArchivosAdjuntosLicitacion", b =>
                {
                    b.Property<long>("idArchivoAdjuntoLicitacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("eliminada")
                        .HasColumnType("bit");

                    b.Property<long>("idLicitacion")
                        .HasColumnType("bigint");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urlArchivoAdjuntoLicitacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idArchivoAdjuntoLicitacion");

                    b.HasIndex("idLicitacion");

                    b.ToTable("ArchivosAdjuntosLicitacion");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.ArchivosAdjuntosOrdenesTrabajo", b =>
                {
                    b.Property<long>("idArchivosAdjuntosOrdenesTrabajo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("eliminada")
                        .HasColumnType("bit");

                    b.Property<long>("idOrdenesTrabajo")
                        .HasColumnType("bigint");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urlArchivosAdjuntosOrdenesTrabajo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idArchivosAdjuntosOrdenesTrabajo");

                    b.HasIndex("idOrdenesTrabajo");

                    b.ToTable("ArchivosAdjuntosOrdenesTrabajo");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.ComentarioActivosClasificacionDiagnosticoAcciones", b =>
                {
                    b.Property<long>("idComentarioDiagnosticosAcciones")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("idAviso")
                        .HasColumnType("bigint");

                    b.Property<long>("idClasificacion")
                        .HasColumnType("bigint");

                    b.Property<long>("idDiagnostico")
                        .HasColumnType("bigint");

                    b.Property<long?>("idMantenimientoCorrectivo")
                        .HasColumnType("bigint");

                    b.HasKey("idComentarioDiagnosticosAcciones");

                    b.ToTable("ComentarioActivosClasificacionDiagnosticoAcciones");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.CondicionesVariables", b =>
                {
                    b.Property<long>("idCondicionesVariables")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("accionQueRealiza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comparadorCondicion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<long>("idPlan")
                        .HasColumnType("bigint");

                    b.Property<long>("idVariable")
                        .HasColumnType("bigint");

                    b.Property<string>("valorCondicion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCondicionesVariables");

                    b.ToTable("CondicionesVariables");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.Cotizaciones", b =>
                {
                    b.Property<long>("idCotizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("IdOrdenPago")
                        .HasColumnType("bigint");

                    b.Property<bool>("eliminada")
                        .HasColumnType("bit");

                    b.Property<long>("estado")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaPropuestaServicioCotizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechafinalizacionPropuestaServicioCotizacion")
                        .HasColumnType("datetime2");

                    b.Property<long>("idCuadrilla")
                        .HasColumnType("bigint");

                    b.Property<long>("idEmpresa")
                        .HasColumnType("bigint");

                    b.Property<long>("idLicitacion")
                        .HasColumnType("bigint");

                    b.Property<long>("idRespuestaSolicitudPedido")
                        .HasColumnType("bigint");

                    b.Property<long>("idSede")
                        .HasColumnType("bigint");

                    b.Property<long>("tipoCotizacion")
                        .HasColumnType("bigint");

                    b.HasKey("idCotizacion");

                    b.HasIndex("idLicitacion");

                    b.ToTable("Cotizaciones");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.CronogramaLicitacion", b =>
                {
                    b.Property<long>("idCronogramaLicitacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("etapa")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("fechaLimite")
                        .HasColumnType("datetime2");

                    b.Property<long>("idLicitacion")
                        .HasColumnType("bigint");

                    b.HasKey("idCronogramaLicitacion");

                    b.HasIndex("idLicitacion");

                    b.ToTable("CronogramaLicitacion");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.CuadrillasTurnos", b =>
                {
                    b.Property<long>("idCuadrillasTurnos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("idCuadrilla")
                        .HasColumnType("bigint");

                    b.Property<long>("idTurno")
                        .HasColumnType("bigint");

                    b.HasKey("idCuadrillasTurnos");

                    b.ToTable("CuadrillasTurnos");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.Grupos", b =>
                {
                    b.Property<long>("idGrupo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<long>("idPlan")
                        .HasColumnType("bigint");

                    b.Property<long>("periodo")
                        .HasColumnType("bigint");

                    b.HasKey("idGrupo");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.GruposAcciones", b =>
                {
                    b.Property<long>("idGruposAcciones")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<long>("idAccion")
                        .HasColumnType("bigint");

                    b.Property<long>("idGrupo")
                        .HasColumnType("bigint");

                    b.Property<long>("idPlan")
                        .HasColumnType("bigint");

                    b.HasKey("idGruposAcciones");

                    b.HasIndex("idPlan");

                    b.ToTable("GruposAcciones");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.GruposActivos", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<Guid>("idActivo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("idPlan")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("GruposActivos");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.GruposActivosMantenimientoPreventivo", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Activo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<long>("idPlan")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("GruposActivosMantenimientoPreventivo");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.GruposMantenimientoPreventivo", b =>
                {
                    b.Property<long>("idGrupo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<long>("idPlan")
                        .HasColumnType("bigint");

                    b.Property<bool>("parada")
                        .HasColumnType("bit");

                    b.Property<long>("periodo")
                        .HasColumnType("bigint");

                    b.HasKey("idGrupo");

                    b.ToTable("GruposMantenimientoPreventivo");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.GruposPartes", b =>
                {
                    b.Property<long>("idGruposPartes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<long>("idGrupo")
                        .HasColumnType("bigint");

                    b.Property<Guid>("idParte")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("idPlan")
                        .HasColumnType("bigint");

                    b.Property<long>("idRepuesto")
                        .HasColumnType("bigint");

                    b.Property<bool>("parada")
                        .HasColumnType("bit");

                    b.Property<long>("periodo")
                        .HasColumnType("bigint");

                    b.HasKey("idGruposPartes");

                    b.ToTable("GruposPartes");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.GruposVariables", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<long>("idGrupo")
                        .HasColumnType("bigint");

                    b.Property<long>("idPlan")
                        .HasColumnType("bigint");

                    b.Property<long>("idVariable")
                        .HasColumnType("bigint");

                    b.Property<long>("periodo")
                        .HasColumnType("bigint");

                    b.Property<string>("valor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("GruposVariables");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.Incidencias", b =>
                {
                    b.Property<long>("idIncidencias")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaHora")
                        .HasColumnType("datetime2");

                    b.Property<long>("idOrden")
                        .HasColumnType("bigint");

                    b.Property<string>("nombreUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idIncidencias");

                    b.HasIndex("idOrden");

                    b.ToTable("Incidencias");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.Licitacion", b =>
                {
                    b.Property<long>("idLicitacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("empresasInvitadas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("estado")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("fechaLimiteRepCotizacion")
                        .HasColumnType("datetime2");

                    b.Property<long>("idCuestionario")
                        .HasColumnType("bigint");

                    b.Property<long>("idEmpresa")
                        .HasColumnType("bigint");

                    b.Property<long>("idOrden")
                        .HasColumnType("bigint");

                    b.Property<long>("idSede")
                        .HasColumnType("bigint");

                    b.Property<string>("idSolicitudPedido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("moneda")
                        .HasColumnType("bigint");

                    b.Property<string>("observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("skillsidSkillLicitacion")
                        .HasColumnType("bigint");

                    b.Property<long>("tipoLicitacion")
                        .HasColumnType("bigint");

                    b.Property<long>("urgencia")
                        .HasColumnType("bigint");

                    b.HasKey("idLicitacion");

                    b.HasIndex("idOrden")
                        .IsUnique();

                    b.HasIndex("skillsidSkillLicitacion");

                    b.ToTable("Licitacion");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.MantenimientoAviso", b =>
                {
                    b.Property<long>("idAviso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("correctivo")
                        .HasColumnType("bit");

                    b.Property<string>("detalleAviso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("idCondicionesVariables")
                        .HasColumnType("bigint");

                    b.Property<long>("idDiagnostico")
                        .HasColumnType("bigint");

                    b.Property<long>("idOrden")
                        .HasColumnType("bigint");

                    b.Property<string>("observacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idAviso");

                    b.HasIndex("idCondicionesVariables");

                    b.HasIndex("idOrden")
                        .IsUnique();

                    b.ToTable("MantenimientoAviso");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.MantenimientoCondiciones", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("acciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("idActivo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("idCondicion")
                        .HasColumnType("bigint");

                    b.Property<long>("idPlan")
                        .HasColumnType("bigint");

                    b.Property<long>("idVariable")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("MantenimientoCondiciones");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.MantenimientoCorrectivo", b =>
                {
                    b.Property<long>("idMantenimientoCorrectivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("acciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("falla")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("idDiagnostico")
                        .HasColumnType("bigint");

                    b.Property<long>("idOrden")
                        .HasColumnType("bigint");

                    b.Property<long>("idOrdenAviso")
                        .HasColumnType("bigint");

                    b.HasKey("idMantenimientoCorrectivo");

                    b.ToTable("MantenimientoCorrectivo");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.MantenimientoPreventivo", b =>
                {
                    b.Property<long>("idMantenimientoPreventivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("fechaPropuestaProgramacion")
                        .HasColumnType("datetime2");

                    b.Property<long>("idGrupo")
                        .HasColumnType("bigint");

                    b.Property<long>("idOrden")
                        .HasColumnType("bigint");

                    b.Property<long>("idPlan")
                        .HasColumnType("bigint");

                    b.Property<bool>("parada")
                        .HasColumnType("bit");

                    b.HasKey("idMantenimientoPreventivo");

                    b.HasIndex("idOrden")
                        .IsUnique();

                    b.ToTable("MantenimientoPreventivo");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.MantenimientoRondas", b =>
                {
                    b.Property<long>("idRonda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaPropuestaProgramacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUltimoMantenimientoRondas")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("idActivo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("idGrupo")
                        .HasColumnType("bigint");

                    b.Property<long>("idOrden")
                        .HasColumnType("bigint");

                    b.Property<long>("idPlan")
                        .HasColumnType("bigint");

                    b.Property<string>("observacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idRonda");

                    b.HasIndex("idOrden")
                        .IsUnique();

                    b.ToTable("MantenimientoRondas");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.OrdenesTrabajo", b =>
                {
                    b.Property<long>("idOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("aprobador")
                        .HasColumnType("bigint");

                    b.Property<string>("creador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("datosActivos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("editor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("eliminada")
                        .HasColumnType("bit");

                    b.Property<bool>("facturada")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("fechaAtencion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaCierre")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaEdicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaLimiteServicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaProgramacionCierre")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaProgramacionInicio")
                        .HasColumnType("datetime2");

                    b.Property<long?>("idCuadrilla")
                        .HasColumnType("bigint");

                    b.Property<long>("idEmpresa")
                        .HasColumnType("bigint");

                    b.Property<int>("idEstadoOrden")
                        .HasColumnType("int");

                    b.Property<long?>("idProveedorAsignado")
                        .HasColumnType("bigint");

                    b.Property<long>("idSede")
                        .HasColumnType("bigint");

                    b.Property<int>("idServicio")
                        .HasColumnType("int");

                    b.Property<long?>("mantenimientoCorrectivoidMantenimientoCorrectivo")
                        .HasColumnType("bigint");

                    b.Property<string>("motivoAnulacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("nivelUrgencia")
                        .HasColumnType("bigint");

                    b.Property<int>("prioridad")
                        .HasColumnType("int");

                    b.Property<long?>("programador")
                        .HasColumnType("bigint");

                    b.Property<long?>("variableDecision")
                        .HasColumnType("bigint");

                    b.HasKey("idOrden");

                    b.HasIndex("mantenimientoCorrectivoidMantenimientoCorrectivo");

                    b.ToTable("OrdenesTrabajo");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.PlanMantenimientoPreventivo", b =>
                {
                    b.Property<long>("idPlanMantenimientoPreventivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaUltimoMantenimientoPreventivo")
                        .HasColumnType("datetime2");

                    b.Property<string>("idActivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("idGrupo")
                        .HasColumnType("bigint");

                    b.Property<long>("idPlan")
                        .HasColumnType("bigint");

                    b.HasKey("idPlanMantenimientoPreventivo");

                    b.ToTable("PlanMantenimientoPreventivo");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.PlanesMantenimientoPreventivo", b =>
                {
                    b.Property<long>("idPlan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<long>("idCategoria")
                        .HasColumnType("bigint");

                    b.Property<long?>("idClasificacion1")
                        .HasColumnType("bigint");

                    b.Property<long?>("idClasificacion2")
                        .HasColumnType("bigint");

                    b.Property<long>("idEmpresa")
                        .HasColumnType("bigint");

                    b.Property<long>("idSede")
                        .HasColumnType("bigint");

                    b.Property<string>("marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("prioridad")
                        .HasColumnType("int");

                    b.HasKey("idPlan");

                    b.ToTable("PlanesMantenimientoPreventivo");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.PlanesRondas", b =>
                {
                    b.Property<long>("idPlan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("idCategoria")
                        .HasColumnType("bigint");

                    b.Property<long>("idClasificacion1")
                        .HasColumnType("bigint");

                    b.Property<long>("idClasificacion2")
                        .HasColumnType("bigint");

                    b.Property<long>("idEmpresa")
                        .HasColumnType("bigint");

                    b.Property<long>("idSede")
                        .HasColumnType("bigint");

                    b.Property<string>("marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("tipoPlan")
                        .HasColumnType("bigint");

                    b.HasKey("idPlan");

                    b.ToTable("PlanesRondas");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.RespuestaAccionesPlanMantenimientoPreventivo", b =>
                {
                    b.Property<long>("idRespuesta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<long>("idAccion")
                        .HasColumnType("bigint");

                    b.Property<long>("idMantenimientoPreventivo")
                        .HasColumnType("bigint");

                    b.Property<Guid>("idParte")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("respuesta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idRespuesta");

                    b.ToTable("RespuestaAccionesPlanMantenimientoPreventivo");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.RespuestaCuestionario", b =>
                {
                    b.Property<long>("idRespuestaCuestionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<long>("idCotizacion")
                        .HasColumnType("bigint");

                    b.Property<long>("idCuestionario")
                        .HasColumnType("bigint");

                    b.Property<long>("idLicitacion")
                        .HasColumnType("bigint");

                    b.Property<string>("opciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("respuesta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idRespuestaCuestionario");

                    b.ToTable("RespuestaCuestionario");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.RespuestaMantenimientoCorrectivo", b =>
                {
                    b.Property<long>("idRespuestaMantenimientoCorrectivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("idDiagnostico")
                        .HasColumnType("bigint");

                    b.Property<long>("idMantenimientoCorrectivo")
                        .HasColumnType("bigint");

                    b.Property<string>("respuesta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idRespuestaMantenimientoCorrectivo");

                    b.ToTable("RespuestaMantenimientoCorrectivo");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.RespuestaSolicitudPedido", b =>
                {
                    b.Property<long>("idRespuestaSolicitudPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("detalle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("idCotizacion")
                        .HasColumnType("bigint");

                    b.Property<long>("idSolicitudPedido")
                        .HasColumnType("bigint");

                    b.HasKey("idRespuestaSolicitudPedido");

                    b.ToTable("RespuestaSolicitudPedido");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.RespuestaVariableRonda", b =>
                {
                    b.Property<long>("idRespuestaVariableRonda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("MantenimientoRondasidRonda")
                        .HasColumnType("bigint");

                    b.Property<long>("idRonda")
                        .HasColumnType("bigint");

                    b.Property<long>("idVariable")
                        .HasColumnType("bigint");

                    b.Property<string>("respuesta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("variable")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idRespuestaVariableRonda");

                    b.HasIndex("MantenimientoRondasidRonda");

                    b.ToTable("RespuestaVariableRonda");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.SkillLicitacion", b =>
                {
                    b.Property<long>("idSkillLicitacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("idLicitacion")
                        .HasColumnType("bigint");

                    b.Property<string>("skills")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idSkillLicitacion");

                    b.ToTable("SkillLicitacion");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.SoportesLicitacion", b =>
                {
                    b.Property<long>("idSoporteLicitacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("LicitacionidLicitacion")
                        .HasColumnType("bigint");

                    b.Property<long>("idLicitacion")
                        .HasColumnType("bigint");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urlSoporteLicitacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idSoporteLicitacion");

                    b.HasIndex("LicitacionidLicitacion");

                    b.ToTable("SoportesLicitacion");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.Turnos", b =>
                {
                    b.Property<long>("idTurno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("creador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("diaFinal")
                        .HasColumnType("int");

                    b.Property<int>("diaInicial")
                        .HasColumnType("int");

                    b.Property<string>("editor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaEdicion")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("horaFinal")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("horaInicial")
                        .HasColumnType("time");

                    b.Property<long>("idEmpresa")
                        .HasColumnType("bigint");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idTurno");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.Variables", b =>
                {
                    b.Property<long>("idVarible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.Property<long>("idClasificacion")
                        .HasColumnType("bigint");

                    b.Property<long>("idUnidadMedida")
                        .HasColumnType("bigint");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idVarible");

                    b.ToTable("Variables");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.ArchivosAdjuntosCotizacion", b =>
                {
                    b.HasOne("Wass.Back.Programador.Models.Entity.Cotizaciones", "Cotizacion")
                        .WithMany("ArchivosAdjuntos")
                        .HasForeignKey("idCotizacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cotizacion");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.ArchivosAdjuntosIncidencias", b =>
                {
                    b.HasOne("Wass.Back.Programador.Models.Entity.Incidencias", "Incidencias")
                        .WithMany("ArchivosAdjuntos")
                        .HasForeignKey("idIncidencias")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Incidencias");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.ArchivosAdjuntosLicitacion", b =>
                {
                    b.HasOne("Wass.Back.Programador.Models.Entity.Licitacion", "Licitacion")
                        .WithMany("ArchivosAdjuntos")
                        .HasForeignKey("idLicitacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Licitacion");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.ArchivosAdjuntosOrdenesTrabajo", b =>
                {
                    b.HasOne("Wass.Back.Programador.Models.Entity.OrdenesTrabajo", "OrdenesTrabajo")
                        .WithMany("ArchivosAdjuntos")
                        .HasForeignKey("idOrdenesTrabajo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrdenesTrabajo");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.Cotizaciones", b =>
                {
                    b.HasOne("Wass.Back.Programador.Models.Entity.Licitacion", "Licitacion")
                        .WithMany("cotizaciones")
                        .HasForeignKey("idLicitacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Licitacion");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.CronogramaLicitacion", b =>
                {
                    b.HasOne("Wass.Back.Programador.Models.Entity.Licitacion", "licitacion")
                        .WithMany("cronograma")
                        .HasForeignKey("idLicitacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("licitacion");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.GruposAcciones", b =>
                {
                    b.HasOne("Wass.Back.Programador.Models.Entity.PlanesMantenimientoPreventivo", "Plan")
                        .WithMany()
                        .HasForeignKey("idPlan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.Incidencias", b =>
                {
                    b.HasOne("Wass.Back.Programador.Models.Entity.OrdenesTrabajo", "OrdenesTrabajo")
                        .WithMany("Incidencias")
                        .HasForeignKey("idOrden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrdenesTrabajo");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.Licitacion", b =>
                {
                    b.HasOne("Wass.Back.Programador.Models.Entity.OrdenesTrabajo", "OrdenTrabajo")
                        .WithOne("licitacion")
                        .HasForeignKey("Wass.Back.Programador.Models.Entity.Licitacion", "idOrden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wass.Back.Programador.Models.Entity.SkillLicitacion", "skills")
                        .WithMany()
                        .HasForeignKey("skillsidSkillLicitacion");

                    b.Navigation("OrdenTrabajo");

                    b.Navigation("skills");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.MantenimientoAviso", b =>
                {
                    b.HasOne("Wass.Back.Programador.Models.Entity.CondicionesVariables", "condicion")
                        .WithMany("mantenimientos")
                        .HasForeignKey("idCondicionesVariables")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wass.Back.Programador.Models.Entity.OrdenesTrabajo", "orden")
                        .WithOne("mantenimientoAviso")
                        .HasForeignKey("Wass.Back.Programador.Models.Entity.MantenimientoAviso", "idOrden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("condicion");

                    b.Navigation("orden");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.MantenimientoPreventivo", b =>
                {
                    b.HasOne("Wass.Back.Programador.Models.Entity.OrdenesTrabajo", "orden")
                        .WithOne("mantenimientoPreventivo")
                        .HasForeignKey("Wass.Back.Programador.Models.Entity.MantenimientoPreventivo", "idOrden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("orden");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.MantenimientoRondas", b =>
                {
                    b.HasOne("Wass.Back.Programador.Models.Entity.OrdenesTrabajo", "orden")
                        .WithOne("mantenimientoRondas")
                        .HasForeignKey("Wass.Back.Programador.Models.Entity.MantenimientoRondas", "idOrden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("orden");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.OrdenesTrabajo", b =>
                {
                    b.HasOne("Wass.Back.Programador.Models.Entity.MantenimientoCorrectivo", "mantenimientoCorrectivo")
                        .WithMany()
                        .HasForeignKey("mantenimientoCorrectivoidMantenimientoCorrectivo");

                    b.Navigation("mantenimientoCorrectivo");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.RespuestaVariableRonda", b =>
                {
                    b.HasOne("Wass.Back.Programador.Models.Entity.MantenimientoRondas", null)
                        .WithMany("respuestasVariableRondas")
                        .HasForeignKey("MantenimientoRondasidRonda");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.SoportesLicitacion", b =>
                {
                    b.HasOne("Wass.Back.Programador.Models.Entity.Licitacion", null)
                        .WithMany("soportes")
                        .HasForeignKey("LicitacionidLicitacion");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.CondicionesVariables", b =>
                {
                    b.Navigation("mantenimientos");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.Cotizaciones", b =>
                {
                    b.Navigation("ArchivosAdjuntos");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.Incidencias", b =>
                {
                    b.Navigation("ArchivosAdjuntos");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.Licitacion", b =>
                {
                    b.Navigation("ArchivosAdjuntos");

                    b.Navigation("cotizaciones");

                    b.Navigation("cronograma");

                    b.Navigation("soportes");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.MantenimientoRondas", b =>
                {
                    b.Navigation("respuestasVariableRondas");
                });

            modelBuilder.Entity("Wass.Back.Programador.Models.Entity.OrdenesTrabajo", b =>
                {
                    b.Navigation("ArchivosAdjuntos");

                    b.Navigation("Incidencias");

                    b.Navigation("licitacion");

                    b.Navigation("mantenimientoAviso");

                    b.Navigation("mantenimientoPreventivo");

                    b.Navigation("mantenimientoRondas");
                });
#pragma warning restore 612, 618
        }
    }
}
